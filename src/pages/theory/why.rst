Зачем писать документацию?
==========================

.. contents:: Содержание
   :local:
   :depth: 2
   :backlinks: none

Главная проблема
----------------

В 2017 году GitHub `опросил <https://opensourcesurvey.org/2017/>`_ более 5000 разработчиков, чтобы
узнать об их опыте работы с проектами с открытым исходным кодом. Среди названных участниками опроса
проблем, на первом месте — проблема документации:

.. pull-quote::

   **«Неполная или устаревшая документация является широко распространенной проблемой, наблюдаемой
   93% респондентов, однако 60% респондентов говорят, что они редко или никогда не вносят свой вклад
   в документацию».**

.. image:: /_static/github-survey-2017-fig1.png
   :align: center

Какие выводы можно из этого сделать?

#. **Документация нужна всем.** Если 93% процента сталкивались с проблемой плохой документации,
   значит её хотя бы иногда читают почти все разработчики.
#. **Документацию почти никто не пишет.** Две трети либо не пишут документацию вообще, либо делают
   это редко. Как часто пишет документацию оставшаяся треть, остаётся только гадать.

Борьба с фактором кирпича
-------------------------

`Фактор кирпича <https://ru.wikipedia.org/wiki/Фактор_автобуса>`_ (или автобуса в англоязычном
варианте) — количество участников проекта — носителей знаний, после выбывания которых (от
гипотетического падения кирпича на голову) проект не сможет быть продолжен.

Эта проблема знакома всем, кто сталкивался с командной разработкой ПО. Можно проводить совещания,
делать доклады, презентации, но всё равно, незафиксированные знания со временем теряются, что может
приводить как к значительным ошибкам, так и к перерасходу ресурсов.

Наличие хорошей документации позволяет ощутимо снизить влияние фактора кирпича на развитие продукта.

Конкурентное преимущество
-------------------------

Предположим, есть два продукта со схожей функциональностью. Это могут быть две библиотеки на Гитхабе
или две облачные системы с API, разница не велика. Но у одного из продуктов если подробная, удобно
структурированная документация с примерами кода и руководствами по решению типичных задач. А у
второго продукта только перечисление возможностей. Какому продукту вы отдадите предпочтение?

При прочих равных выбор всегда будет в пользу хорошо документированного продукта. Во-первых, ещё на
стадии выбора можно примерно понять насколько сложно будет решать стоящие перед вами задачи.
Во-вторых, имея хорошую документацию, вы будете более уверены в будущем — если возникнут вопросы по
работе с продуктом, вероятность их быстрого решения будет значительно выше.

Подводя итоги
-------------

#. Документацию надо писать потому что люди (разработчики, пользователи) хотят её иметь.
#. Документация снижает издержки и риски при разработке ПО.
#. Хорошая документация — это конкурентное преимущество продукта.

Подробнее см. :doc:`goal`.

Ссылки
------

* `Why Documentation Is Important <https://www.fastspot.com/publications/why-documentation-is-important/>`_,
  Tracey Halvorsen (`Fastspot <https://www.fastspot.com/>`_)
